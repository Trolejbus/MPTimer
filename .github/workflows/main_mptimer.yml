# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - MPTimer

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
  
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        working-directory: ./MPTimer
        run: dotnet build --configuration Release
        
      - name: Install EF Tool
        run: |
          dotnet new tool-manifest
          dotnet tool install dotnet-ef
          
      - name: Generate scripts
        working-directory: ./MPTimer/MPTimerWeb
        run: dotnet ef database update --context AgentContext
        
      - name: Generate scripts
        working-directory: ./MPTimer
        run: dotnet ef migrations script --no-build --output ${{env.DOTNET_ROOT}}/sql/sql-script-workspace-event.sql --idempotent --context WorkspaceEventContext --project MPTimerWorkspaceEvent --startup-project MPTimerWeb
        
      - name: Generate scripts
        working-directory: ./MPTimer
        run: dotnet ef migrations script --no-build --output ${{env.DOTNET_ROOT}}/sql/sql-script-work-task.sql --idempotent --context WorkTaskContext --project MPTimerWorkTask --startup-project MPTimerWeb
        
      - name: Azure SQL Deploy
        uses: Azure/sql-action@v1
        with:
          server-name: tcp:mptimer.database.windows.net
          connection-string: ${{ secrets.AGENT_CONNECTION_STRING }}
          sql-file: ${{env.DOTNET_ROOT}}/sql/sql-script.sql
        
      - name: dotnet publish
        working-directory: ./MPTimer
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app
          
      - name: Update database
        run: |
          dotnet tool install --global dotnet-ef
          dotnet tool restore
          dotnet ef database update -c AgentContext
        env:
          ASPNETCORE_ENVIRONMENT: Release

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'MPTimer'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_CFA0A76569FD4FCF97A4EFF0B322394B }}
          package: .
